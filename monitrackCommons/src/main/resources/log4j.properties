### Sources :
#   - https://www.logicbig.com/tutorials/misc/java-logging/slf4j-with-log4j.html
#   - https://docs.oracle.com/cd/E29578_01/webhelp/cas_webcrawler/src/cwcg_config_log4j_file.html


# Declaration d'un logger : private static Logger log = LoggerFactory.getLogger(NomDeLaClasse.class);
# Les différents types de log : debug, info, warn, error
# Exemple d'utilisation : log.info("Lancement de Monitrack");

# Definition de quelques caractéristiques comme ici, le degré maximum d'affichage d'un log, le standard output (console Eclipse) et le fichier dans lequel tout va être écrit
log4j.rootCategory											=INFO, stdout, file

### Affichage sur la console
log4j.appender.stdout										=org.apache.log4j.ConsoleAppender
# Format d'affichage
log4j.appender.stdout.layout								=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern				=[%d{dd-MM-yyyy HH:mm:ss}] - %5p - Class : %c{2} - Line : %L - %m%n

### Affichage dans un fichier .log
log4j.appender.file											=org.apache.log4j.FileAppender
# Fichier dans lequel les logs vont être écrits
log4j.appender.file.File									=monitrack.log
# Format d'affichage
log4j.appender.file.layout									=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern				=[%d{dd-MM-yyyy 'at' HH:mm:ss}] - %5p - Class : %c{2} - Line : %L - %m%n
# log4j.appender.file.layout.ConversionPattern				=[%d{dd-MM-yyyy HH:mm:ss}] - %5p - %t %c{2}:%L - %m%n